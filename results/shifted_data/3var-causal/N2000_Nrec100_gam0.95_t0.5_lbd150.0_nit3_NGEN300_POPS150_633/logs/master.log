Storing all relevant data...
Run all types of recourse...
results for up to 0 runs found


-------------
ITERATION 0
-------------
Creating 2 batches of data with 1000 observations
Split the data into 2 batches
Fitting model (type logreg)...
fitting model with the specified parameters
model fit with accuracy 1.0
f1-score 1.0
assessing how many recourse contenders
enough recourse contendors. continue.
create folder to starte results
Fitting 5 models for multiplicity robustness assessment.
[[2.1816508 2.7270635 5.1268794]]
[[2.18177288 2.72721611 5.1271663 ]]
[[2.13064138 2.66330173 5.00700725]]
[[2.15306698 2.69133374 5.05970747]]
[[2.15164851 2.68956063 5.056374  ]]
Node: x1, shift (mean, var): (0.0, 1.0)
Mean value of parents: 0.0132182277739048
(array([0., 1.], dtype=float32), array([1011,  989]))
Node: x1, shift (mean, var): (0.5, 1.0)
Mean value of parents: 0.6798849105834961
(array([0., 1.], dtype=float32), array([1011,  989]))
Node: x1, shift (mean, var): (0.0, 0.5)
Mean value of parents: 0.007471173536032438
(array([0., 1.], dtype=float32), array([1022,  978]))
Node: x1, shift (mean, var): (0.5, 0.5)
Mean value of parents: 0.6741378307342529
(array([0., 1.], dtype=float32), array([1022,  978]))
Node: x2, shift (mean, var): (0.0, 1.0)
Mean value of parents: 0.01752851903438568
(array([0., 1.], dtype=float32), array([1011,  989]))
Node: x2, shift (mean, var): (0.5, 1.0)
Mean value of parents: 0.3508618175983429
(array([0., 1.], dtype=float32), array([1011,  989]))
Node: x2, shift (mean, var): (0.0, 0.5)
Mean value of parents: 0.014654995873570442
(array([0., 1.], dtype=float32), array([1011,  989]))
Node: x2, shift (mean, var): (0.5, 0.5)
Mean value of parents: 0.3479883074760437
(array([0., 1.], dtype=float32), array([1011,  989]))
Node: x3, shift (mean, var): (0.0, 1.0)
Mean value of parents: 0.01580440253019333
(array([0., 1.], dtype=float32), array([1011,  989]))
Node: x3, shift (mean, var): (0.5, 1.0)
Mean value of parents: 0.18247106671333313
(array([0., 1.], dtype=float32), array([1011,  989]))
Node: x3, shift (mean, var): (0.0, 0.5)
Mean value of parents: 0.014367640018463135
(array([0., 1.], dtype=float32), array([1011,  989]))
Node: x3, shift (mean, var): (0.5, 0.5)
Mean value of parents: 0.18103429675102234
(array([0., 1.], dtype=float32), array([1011,  989]))


-------------
ITERATION 1
-------------
Creating 2 batches of data with 1000 observations
Split the data into 2 batches
Fitting model (type logreg)...
fitting model with the specified parameters
model fit with accuracy 0.996
f1-score 0.9959919839679359
assessing how many recourse contenders
enough recourse contendors. continue.
create folder to starte results
Fitting 5 models for multiplicity robustness assessment.
[[2.06905837 2.58632296 4.86228715]]
[[2.12849841 2.66062301 5.00197124]]
[[2.09466882 2.61833602 4.92247169]]
[[2.14832927 2.68541158 5.04857375]]
[[2.08174438 2.60218047 4.89209926]]
Node: x1, shift (mean, var): (0.0, 1.0)
Mean value of parents: -0.011385495774447918
(array([0., 1.], dtype=float32), array([ 996, 1004]))
Node: x1, shift (mean, var): (0.5, 1.0)
Mean value of parents: 0.6552811861038208
(array([0., 1.], dtype=float32), array([ 996, 1004]))
Node: x1, shift (mean, var): (0.0, 0.5)
Mean value of parents: -0.00643527926877141
(array([0., 1.], dtype=float32), array([ 992, 1008]))
Node: x1, shift (mean, var): (0.5, 0.5)
Mean value of parents: 0.660231351852417
(array([0., 1.], dtype=float32), array([ 992, 1008]))
Node: x2, shift (mean, var): (0.0, 1.0)
Mean value of parents: -0.0150981480255723
(array([0., 1.], dtype=float32), array([ 996, 1004]))
Node: x2, shift (mean, var): (0.5, 1.0)
Mean value of parents: 0.3182351887226105
(array([0., 1.], dtype=float32), array([ 996, 1004]))
Node: x2, shift (mean, var): (0.0, 0.5)
Mean value of parents: -0.012623039074242115
(array([0., 1.], dtype=float32), array([ 996, 1004]))
Node: x2, shift (mean, var): (0.5, 0.5)
Mean value of parents: 0.32071027159690857
(array([0., 1.], dtype=float32), array([ 996, 1004]))
Node: x3, shift (mean, var): (0.0, 1.0)
Mean value of parents: -0.013613085262477398
(array([0., 1.], dtype=float32), array([ 996, 1004]))
Node: x3, shift (mean, var): (0.5, 1.0)
Mean value of parents: 0.15305358171463013
(array([0., 1.], dtype=float32), array([ 996, 1004]))
Node: x3, shift (mean, var): (0.0, 0.5)
Mean value of parents: -0.012375532649457455
(array([0., 1.], dtype=float32), array([ 996, 1004]))
Node: x3, shift (mean, var): (0.5, 0.5)
Mean value of parents: 0.15429113805294037
(array([0., 1.], dtype=float32), array([ 996, 1004]))


-------------
ITERATION 2
-------------
Creating 2 batches of data with 1000 observations
Split the data into 2 batches
Fitting model (type logreg)...
fitting model with the specified parameters
model fit with accuracy 0.999
f1-score 0.9989929506545822
assessing how many recourse contenders
enough recourse contendors. continue.
create folder to starte results
Fitting 5 models for multiplicity robustness assessment.
[[2.18429381 2.73036726 5.13309046]]
[[2.00922219 2.51152774 4.72167213]]
[[2.13229014 2.66536268 5.01088184]]
[[2.17451566 2.71814458 5.11011179]]
[[2.10988658 2.63735821 4.95823343]]
Node: x1, shift (mean, var): (0.0, 1.0)
Mean value of parents: 0.03283850848674774
(array([0., 1.], dtype=float32), array([1036,  964]))
Node: x1, shift (mean, var): (0.5, 1.0)
Mean value of parents: 0.6995052099227905
(array([0., 1.], dtype=float32), array([1036,  964]))
Node: x1, shift (mean, var): (0.0, 0.5)
Mean value of parents: 0.018560897558927536
(array([0., 1.], dtype=float32), array([1047,  953]))
Node: x1, shift (mean, var): (0.5, 0.5)
Mean value of parents: 0.6852275133132935
(array([0., 1.], dtype=float32), array([1047,  953]))
Node: x2, shift (mean, var): (0.0, 1.0)
Mean value of parents: 0.04354672133922577
(array([0., 1.], dtype=float32), array([1033,  967]))
Node: x2, shift (mean, var): (0.5, 1.0)
Mean value of parents: 0.37688004970550537
(array([0., 1.], dtype=float32), array([1033,  967]))
Node: x2, shift (mean, var): (0.0, 0.5)
Mean value of parents: 0.03640791401267052
(array([0., 1.], dtype=float32), array([1034,  966]))
Node: x2, shift (mean, var): (0.5, 0.5)
Mean value of parents: 0.3697412610054016
(array([0., 1.], dtype=float32), array([1034,  966]))
Node: x3, shift (mean, var): (0.0, 1.0)
Mean value of parents: 0.03926343098282814
(array([0., 1.], dtype=float32), array([1034,  966]))
Node: x3, shift (mean, var): (0.5, 1.0)
Mean value of parents: 0.20593009889125824
(array([0., 1.], dtype=float32), array([1034,  966]))
Node: x3, shift (mean, var): (0.0, 0.5)
Mean value of parents: 0.03569403663277626
(array([0., 1.], dtype=float32), array([1035,  965]))
Node: x3, shift (mean, var): (0.5, 0.5)
Mean value of parents: 0.20236071944236755
(array([0., 1.], dtype=float32), array([1035,  965]))
FINISHED TIME: 15270.239303827286
